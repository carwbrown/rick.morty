{"version":3,"sources":["components/InformationCard/index.tsx","hooks/usePagination/index.ts","containers/Characters/index.tsx","containers/Locations/index.tsx","containers/Episodes/index.tsx","containers/ClickGame/index.tsx","containers/Form/index.tsx","components/NavBar/index.tsx","containers/LocationsGQL/index.tsx","App.tsx","apolloClient.ts","index.tsx"],"names":["InformationCard","name","id","image","status","currentLocation","created","className","key","src","alt","moment","format","usePagination","useState","currentPage","setCurrentPage","maxPage","setMaxPage","next","Math","min","prev","max","jumpTo","input","pageToJumpTo","fetchCharacters","a","fetch","characterDataRes","json","getCharacterData","Characters","loading","setLoading","characters","setCharacters","saveTimeout","setSaveTimeout","fetchData","useCallback","fetchedCharacters","results","info","pages","fetchDataPagination","useEffect","onClick","disabled","onChange","event","clearTimeout","newPage","target","value","setTimeout","map","character","location","Locations","locations","setLocations","then","res","error","console","warn","catch","err","Episodes","episodes","setEpisodes","eps","episode","ClickGame","React","timer","setTimer","count","setCount","useRef","clear","current","t","c","Form","nameRef","emailRef","passwordRef","Fragment","placeholder","type","ref","focus","log","useStyles","makeStyles","theme","createStyles","root","flexGrow","menuButton","marginRight","spacing","title","NavBar","classes","anchorEl","setAnchorEl","handleClose","AppBar","position","Toolbar","IconButton","edge","color","aria-label","currentTarget","keepMounted","open","Boolean","onClose","to","MenuItem","Typography","variant","GET_LOCATIONS","gql","table","minWidth","LocationsGQL","useQuery","data","TableContainer","component","Paper","Table","TableHead","TableRow","TableCell","align","TableBody","scope","dimension","residents","resident","join","App","path","apolloClient","ApolloClient","uri","cache","InMemoryCache","ReactDOM","render","client","document","getElementById"],"mappings":"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","file":"static/js/main.7ff1bb59.chunk.js","sourcesContent":["import React from \"react\";\nimport moment from \"moment\";\nimport \"./Card.css\";\n\nconst InformationCard = ({\n  name,\n  id,\n  image,\n  status,\n  currentLocation,\n  created,\n}: {\n  name: string;\n  id: string;\n  image: string;\n  status: string;\n  currentLocation: string;\n  created: string;\n}) => {\n  return (\n    <div className=\"CardWrapper\" key={id}>\n      <img className=\"CardImage\" src={image} alt={`${name}`} />\n      <div className=\"CardText\">\n        <div className=\"CardTitle\">{name}</div>\n        <div className=\"CardDescription\">\n          {status === \"unknown\" ? \"Unknown\" : status} on {currentLocation}.\n          Added {moment(created).format(\"L\")}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default InformationCard;\n","import { useState } from \"react\";\n\nconst usePagination = () => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [maxPage, setMaxPage] = useState(1);\n\n  const next = () => {\n    setCurrentPage(Math.min(currentPage + 1, maxPage));\n  };\n\n  const prev = () => {\n    setCurrentPage(Math.max(currentPage - 1, 1));\n  };\n\n  const jumpTo = (input: string) => {\n    let pageToJumpTo = +input;\n    if (pageToJumpTo > maxPage) {\n      pageToJumpTo = maxPage;\n    }\n    if (pageToJumpTo < 1) {\n      pageToJumpTo = 1;\n    }\n    setCurrentPage(pageToJumpTo);\n  };\n\n  return { currentPage, maxPage, next, prev, setMaxPage, jumpTo };\n};\n\nexport default usePagination;\n","import React, { useEffect, useCallback, useState, ChangeEvent } from \"react\";\nimport InformationCard from \"../../components/InformationCard\";\nimport usePagination from \"../../hooks/usePagination\";\n\nconst fetchCharacters = async (currentPage: number) => {\n  const characterDataRes = await fetch(\n    `https://rickandmortyapi.com/api/character/?page=${currentPage}`,\n  );\n  const getCharacterData = await characterDataRes.json();\n  return getCharacterData;\n};\n\ninterface ICharacter {\n  id: string;\n  name: string;\n  image: string;\n  status: string;\n  location: {\n    name: string;\n  };\n  created: string;\n}\n\nexport const Characters = () => {\n  const [loading, setLoading] = useState(false);\n  const [characters, setCharacters] = useState([]);\n  const [saveTimeout, setSaveTimeout] = useState<\n    ReturnType<typeof setTimeout>\n  >();\n\n  const {\n    currentPage,\n    jumpTo,\n    maxPage,\n    next,\n    prev,\n    setMaxPage,\n  } = usePagination();\n\n  const fetchData = useCallback(async () => {\n    setLoading(true);\n    const fetchedCharacters = await fetchCharacters(currentPage);\n    setCharacters(fetchedCharacters.results);\n    setMaxPage(fetchedCharacters.info.pages);\n    if (fetchedCharacters) {\n      setLoading(false);\n    }\n    // eslint-disable-next-line\n  }, []);\n\n  const fetchDataPagination = useCallback(async () => {\n    const fetchedCharacters = await fetchCharacters(currentPage);\n    setCharacters(fetchedCharacters.results);\n  }, [currentPage]);\n\n  useEffect(() => {\n    fetchData();\n  }, [fetchData]);\n\n  useEffect(() => {\n    fetchDataPagination();\n  }, [fetchDataPagination]);\n\n  if (loading) {\n    return <div>Loading Characters...</div>;\n  }\n\n  const handleOnChange = (event: ChangeEvent<HTMLInputElement>) => {\n    saveTimeout || clearTimeout(saveTimeout);\n    const newPage = event?.target?.value;\n\n    setSaveTimeout(\n      setTimeout(() => {\n        jumpTo(newPage);\n      }, 1000),\n    );\n  };\n  return (\n    <div>\n      <div className=\"SectionTitles\">Characters</div>\n      <button onClick={prev} disabled={currentPage === 1}>\n        Prev\n      </button>\n      <button onClick={next} disabled={currentPage === maxPage}>\n        Next\n      </button>\n      <div>\n        on page: <strong>{currentPage}</strong> of <strong>{maxPage}</strong>\n      </div>\n      <div>\n        Jump to Page: <input name=\"pageNumber\" onChange={handleOnChange} />\n      </div>\n      <div className=\"InformationSection\">\n        {characters.map((character: ICharacter) => (\n          <InformationCard\n            key={character.id}\n            id={character.id}\n            name={character.name}\n            image={character.image}\n            status={character.status}\n            currentLocation={character.location.name}\n            created={character.created}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\n\ninterface ILocation {\n  id: string;\n  name: string;\n}\n\nexport const Locations = () => {\n  const [loading, setLoading] = useState(true);\n  const [locations, setLocations] = useState([]);\n\n  useEffect(() => {\n    setLoading(true);\n    fetch(`https://rickandmortyapi.com/api/location/`)\n      .then((res) => res.json())\n      .then(\n        (locations) => {\n          setLocations(locations.results);\n        },\n        (error) => {\n          console.warn(error);\n        },\n      )\n      .catch((err) => console.warn(err));\n    setLoading(false);\n  }, []);\n\n  if (loading) {\n    return <div>Loading Locations...</div>;\n  }\n  return (\n    <div>\n      <div className=\"SectionTitles\">Locations</div>\n      {locations.map((location: ILocation) => (\n        <div key={location.id}>{location.name}</div>\n      ))}\n    </div>\n  );\n};\n","import React, { useEffect, useCallback, useState } from \"react\";\n\nconst fetchEpisodes = () => {\n  return fetch(`https://rickandmortyapi.com/api/episode/`).then((res) =>\n    res.json(),\n  );\n};\ninterface IEpisode {\n  id: string;\n  name: string;\n}\nexport const Episodes = () => {\n  const [loading, setLoading] = useState(true);\n  const [episodes, setEpisodes] = useState([]);\n\n  const fetchData = useCallback(async () => {\n    setLoading(true);\n    fetchEpisodes()\n      .then((eps) => setEpisodes(eps.results))\n      .catch((err) => console.warn(err));\n\n    setLoading(false);\n  }, []);\n\n  useEffect(() => {\n    fetchData();\n  }, [fetchData]);\n\n  if (loading) {\n    return <div>Loading Episodes...</div>;\n  }\n  return (\n    <div>\n      <div className=\"SectionTitles\">Episodes</div>\n      {episodes.map((episode: IEpisode) => (\n        <div key={episode.id}>{episode.name}</div>\n      ))}\n    </div>\n  );\n};\n","import React from \"react\";\n\nexport const ClickGame = () => {\n  const [timer, setTimer] = React.useState(10);\n  const [count, setCount] = React.useState(0);\n  const id = React.useRef<any>(null);\n\n  const clear = () => clearTimeout(id.current);\n\n  React.useEffect(() => {\n    id.current = setTimeout(function () {\n      setTimer((t) => t - 1);\n    }, 1000);\n\n    return clear;\n  });\n\n  React.useEffect(() => {\n    if (timer === 0) {\n      clear();\n    }\n  }, [timer]);\n\n  const handleClick = () => {\n    setCount((c) => c + 1);\n  };\n  return (\n    <div className=\"App\">\n      <div>Timer: {timer}</div>\n      <div>Count: {count}</div>\n      {timer !== 0 && <button onClick={handleClick}>Click</button>}\n    </div>\n  );\n};\n","import React from \"react\";\n\nexport const Form = () => {\n  const nameRef = React.useRef<HTMLInputElement>(null);\n  const emailRef = React.useRef<HTMLInputElement>(null);\n  const passwordRef = React.useRef<HTMLInputElement>(null);\n\n  const handleSubmit = () => {\n    console.log(nameRef?.current?.value);\n    console.log(emailRef?.current?.value);\n    console.log(passwordRef?.current?.value);\n  };\n\n  const handleReset = () => {\n    if (nameRef.current) {\n      nameRef.current.value = \"\";\n    }\n    if (emailRef.current) {\n      emailRef.current.value = \"\";\n    }\n    if (passwordRef.current) {\n      passwordRef.current.value = \"\";\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <label>\n        Name:\n        <input placeholder=\"name\" type=\"text\" ref={nameRef} />\n      </label>\n      <label>\n        Email:\n        <input placeholder=\"email\" type=\"text\" ref={emailRef} />\n      </label>\n      <label>\n        Password:\n        <input placeholder=\"password\" type=\"text\" ref={passwordRef} />\n      </label>\n\n      <hr />\n\n      <button onClick={() => nameRef?.current?.focus()}>\n        Focus Name Input\n      </button>\n      <button onClick={() => emailRef?.current?.focus()}>\n        Focus Email Input\n      </button>\n      <button onClick={() => passwordRef?.current?.focus()}>\n        Focus Password Input\n      </button>\n\n      <hr />\n\n      <button onClick={handleSubmit}>Submit</button>\n      <button onClick={handleReset}>Reset</button>\n    </React.Fragment>\n  );\n};\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n    },\n  }),\n);\n\nexport const NavBar = () => {\n  const classes = useStyles();\n\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n  return (\n    <AppBar position=\"static\">\n      <Toolbar>\n        <IconButton\n          edge=\"start\"\n          color=\"inherit\"\n          aria-label=\"menu\"\n          onClick={handleClick}\n          className={classes.menuButton}\n        >\n          <MenuIcon />\n        </IconButton>\n        <Menu\n          id=\"simple-menu\"\n          anchorEl={anchorEl}\n          keepMounted\n          open={Boolean(anchorEl)}\n          onClose={handleClose}\n        >\n          <Link to=\"/\">\n            <MenuItem onClick={handleClose}>Home</MenuItem>\n          </Link>\n          <Link to=\"/locations\">\n            <MenuItem onClick={handleClose}>R and M Locations</MenuItem>\n          </Link>\n          <Link to=\"/locations-gql\">\n            <MenuItem onClick={handleClose}>R and M Locations GQL</MenuItem>\n          </Link>\n          <Link to=\"/episodes\">\n            <MenuItem onClick={handleClose}>R and M Episodes</MenuItem>\n          </Link>\n          <Link to=\"/form\">\n            <MenuItem onClick={handleClose}>Form</MenuItem>\n          </Link>\n          <Link to=\"/click\">\n            <MenuItem onClick={handleClose}>Click Counter</MenuItem>\n          </Link>\n        </Menu>\n        <Typography variant=\"h6\" className={classes.title}>\n          TS React Playground\n        </Typography>\n      </Toolbar>\n    </AppBar>\n  );\n};\n","import React from \"react\";\nimport { useQuery, gql } from \"@apollo/client\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\n\nconst GET_LOCATIONS = gql`\n  query GetCharacters {\n    locations {\n      results {\n        name\n        type\n        id\n        dimension\n        residents {\n          name\n          id\n        }\n      }\n    }\n  }\n`;\n\ninterface IResident {\n  name: string;\n  id: string;\n}\ninterface ILocation {\n  id: string;\n  name: string;\n  type: string;\n  dimension: string;\n  residents: IResident[];\n}\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\nexport const LocationsGQL = () => {\n  const classes = useStyles();\n\n  const { loading, error, data } = useQuery(GET_LOCATIONS);\n\n  if (loading) {\n    return <div>Loading Locations...</div>;\n  }\n  if (error) {\n    return <div>ERROR</div>;\n  }\n\n  const formatResidents = (residents: IResident[]) => {\n    const residentNames = residents.map((resident: IResident) => resident.name);\n    return residentNames.join(\", \");\n  };\n\n  return (\n    <div>\n      <div className=\"SectionTitles\">Locations</div>\n      <TableContainer component={Paper}>\n        <Table className={classes.table} aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <TableCell>Name</TableCell>\n              <TableCell align=\"right\">Type</TableCell>\n              <TableCell align=\"right\">Dimension</TableCell>\n              <TableCell align=\"right\">Residents</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {data.locations.results.map((location: ILocation) => (\n              <TableRow key={location.id}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {location.name}\n                </TableCell>\n                <TableCell align=\"right\">{location.type}</TableCell>\n                <TableCell align=\"right\">{location.dimension}</TableCell>\n                <TableCell align=\"right\">\n                  {formatResidents(location.residents)}\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  );\n};\n","import React from \"react\";\nimport \"./App.css\";\nimport { Characters } from \"./containers/Characters\";\nimport { Locations } from \"./containers/Locations\";\nimport { Episodes } from \"./containers/Episodes\";\nimport { Switch, Route } from \"react-router-dom\";\nimport { ClickGame } from \"./containers/ClickGame\";\nimport { Form } from \"./containers/Form\";\nimport { NavBar } from \"./components/NavBar\";\nimport { LocationsGQL } from \"./containers/LocationsGQL\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <NavBar />\n      <div className=\"AppContainer\">\n        <Switch>\n          <Route path=\"/form\">\n            <Form />\n          </Route>\n          <Route path=\"/click\">\n            <ClickGame />\n          </Route>\n          <Route path=\"/locations\">\n            <Locations />\n          </Route>\n          <Route path=\"/locations-gql\">\n            <LocationsGQL />\n          </Route>\n          <Route path=\"/episodes\">\n            <Episodes />\n          </Route>\n          <Route path=\"/\">\n            <Characters />\n            <Locations />\n            <Episodes />\n          </Route>\n        </Switch>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ApolloClient, InMemoryCache } from \"@apollo/client\";\n\nexport const apolloClient = new ApolloClient({\n  uri: \"https://rickandmortyapi.com/graphql\",\n  cache: new InMemoryCache(),\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { ApolloProvider } from \"@apollo/client\";\nimport { apolloClient } from \"./apolloClient\";\n\nReactDOM.render(\n  <ApolloProvider client={apolloClient}>\n    <Router>\n      <App />\n    </Router>\n  </ApolloProvider>,\n  document.getElementById(\"root\"),\n);\n"],"sourceRoot":""}